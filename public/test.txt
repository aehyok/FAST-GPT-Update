从2020年9月25日入职公司，开始接触vue2,然后着手公司pc端：vue2+elementui,微信端h5：vue2+vant, 然后android app webview嵌套 vue2+vant,期间也接触了一个react项目


2021年年初开始走上，vite+vue3+echarts大屏项目，相对于熟悉了解了vue2后，直接用vue2的语法来写是没问题的，然后慢慢的也在学习vue3+setup的语法，也将某些组件进行了转换


2021年4月开始一个新的pc项目，采用了qiankun微前端，主应用使用vite+vue3,其他子应用采用vuecli+vue3 + element-plus,刚使用qiankun时，还是遇到了一些问题


pc端项目经过几个月的时间，陆续稳定上线，然后期间封装了pc端的json  form表单生成器和json table列表生成器，这两个组件节省了很多PC端重复的工作，以及bug修改，感觉封装出来还是有点成就感的，我的前端兄弟都觉得非常的nice。


搞pc期间还接触了leaflet、leaflet-geoman来给地图打点或者画区域，上手略有难度，但经过几天的摸索熟悉后，能够磕磕绊绊的将需要的功能实现出来了，使用过后感觉这个类库的功能还是非常强大的。


2021年年底开始在原有android app webview的基础上增加新的功能，考虑到对vue3以及qiankun的熟悉，准备添加一个子应用，使用vue3+vant的模式来处理新增的业务功能


此时可着手两个组件的封装，一个当然还是json form表单生成器的，逻辑上跟pc组件是类似的，只是换了一套vant的组件。另外一个相当于pc端的table列表，但是在移动端的h5当中每个列表的样式可能不同，就单独提取了一个模板，加速充血了一波，待组件稳定后，其实大致到了2022年的3月份了。


2022年4月份的时候公司有一个专门数据采集的项目，最终要的功能便是用到了根据json生成form表单的并且对接通用接口，json的生成也是通过页面进行配置。其中难度比较大的便是数据的联动控制显示隐藏，以及数据校验、正则匹配、以及将部分js代码通过界面去编写，前端解析json后再动态执行js代码也是一个不小的难点。


另外一个突破便是将vant 列表数据模板，做了两个通用的，根据SQL配置 接口返回通用的数据结构列表，去匹配模板列表。其实这里也有思考通过后台配置，拖拽元素实现列表的一行数据样式展示，但是在渲染的时候我是根据屏幕宽高比去进行等比的展示，但是发现样式会有所变形，主要是通过transform: scale(0.9) 计算出比例，然后填充数值，我猜测可能是我实现的方式还存在问题，等有时间再来看看，主要是我觉得这个思路好像是没问题的。


期间5、6月份开始解决vue3 移动端中 列表到详情再返回列表，并且要记录当时的位置的问题，其实解决起来还是蛮麻烦的，当时查阅资料或者水平还不够，没能实现，但是线上的问题又必须要解决，于是硬着头皮看了一下vue3 keppalive组件的源码，其实还是看了蛮久的，看完解决完问题后，我还专门写了一篇小文，一不小心算是上了掘金的头条，真的非常开心。


同时解决微信小程序中嵌套webview场景中的一些小问题，最主要的一个问题其实微信中打开h5页面，如果有使用到localstorage或者cookie，再在微信小程序中嵌套h5页面，那么会存在脏读的问题。我是通过根据window.navigator.userAgent.toLowerCase() 先判断其中是否包含 'miniprogram',有则代表是在微信小程序中，再判断是否包含'micromessenger',有则代表是在微信环境中，这样针对每个环境去设置不同的key，然后在当前环境中使用当前的key就不会产生冲突了。


2022年7月份意外脚骨折在家里呆了三个周吧，然后上下班打车两个月终于摆脱拐杖，不得不说真的是伤筋动骨100天呢。


2022年8月和9月正常开始迭代新的需求和项目的bug修复，期间有指出有新的项目要开始了。由于自己自身的尴尬（原先前端由我来管理的，但是骨折期间和之后发生了一些令人不悦的事情，没办法我直接提出交出去吧），自己也不能闲下来，于是开始新项目的准备，前端我可以干，有时间了也开始参与后端的代码。
